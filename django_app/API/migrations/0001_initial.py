# Generated by Django 4.2.3 on 2024-02-26 23:39

import API.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Category Name')),
                ('categorydescription', models.CharField(blank=True, max_length=256, null=True, verbose_name='Category Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userid', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='User ID')),
                ('password', models.CharField(max_length=128, verbose_name='User Password')),
                ('nickname', models.CharField(max_length=64, unique=True, verbose_name='User Nickname')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='User Email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_reported', models.BooleanField(default=False)),
                ('is_banned', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'API_user',
            },
            managers=[
                ('objects', API.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserReportDetail',
            fields=[
                ('reportid', models.AutoField(primary_key=True, serialize=False, verbose_name='Report ID')),
                ('reportreason', models.TextField(blank=True, null=True, verbose_name='Report Reason')),
                ('reportat', models.DateTimeField(auto_now_add=True)),
                ('evidence_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Evidence Type')),
                ('evidence_targetid', models.IntegerField(verbose_name='Evidence Target ID')),
                ('evidence_url', models.CharField(blank=True, max_length=256, null=True, verbose_name='Evidence URL')),
                ('targetid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Reporter ID')),
                ('userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reporter', to=settings.AUTH_USER_MODEL, verbose_name='User ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserBanDetail',
            fields=[
                ('banid', models.AutoField(primary_key=True, serialize=False, verbose_name='Ban ID')),
                ('bannedreason', models.TextField(blank=True, null=True, verbose_name='Block Reason')),
                ('bannedat', models.DateTimeField(auto_now_add=True)),
                ('banneduntil', models.DateTimeField(blank=True, null=True)),
                ('bannedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Blocker ID')),
                ('userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banneduser', to=settings.AUTH_USER_MODEL, verbose_name='User ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tagid', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Tag Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Tag Creator')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postid', models.AutoField(primary_key=True, serialize=False, verbose_name='Post ID')),
                ('thumbnailurl', models.TextField(blank=True, default='', max_length=65535, verbose_name='Thumbnail URL')),
                ('title', models.CharField(max_length=128, verbose_name='Post Title')),
                ('content', models.TextField(verbose_name='Post Content')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='View Counts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=True, verbose_name='Published')),
                ('secret_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='Secret Password')),
                ('is_secret', models.BooleanField(default=False, verbose_name='Secret')),
                ('categoryid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.category', verbose_name='Post Category')),
                ('tagid', models.ManyToManyField(blank=True, to='API.tag', verbose_name='Post Tags')),
                ('userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Post Creator')),
            ],
        ),
        migrations.CreateModel(
            name='ForcedControl',
            fields=[
                ('controlid', models.AutoField(primary_key=True, serialize=False, verbose_name='Control ID')),
                ('contenttype', models.CharField(max_length=32, verbose_name='Content Type')),
                ('contentid', models.CharField(max_length=32, verbose_name='Content ID')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('adminid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin', to=settings.AUTH_USER_MODEL, verbose_name='Admin ID')),
                ('targetid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target', to=settings.AUTH_USER_MODEL, verbose_name='Target ID')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('commentid', models.AutoField(primary_key=True, serialize=False, verbose_name='Comment ID')),
                ('created_ip', models.CharField(max_length=16, null=True, verbose_name='Comment Creator IP')),
                ('content', models.CharField(max_length=1024, verbose_name='Comment Content')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_secret', models.BooleanField(default=False)),
                ('postid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.post', verbose_name='Comment Post ID')),
                ('userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Comment Creator')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='userid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Category Creator'),
        ),
    ]
